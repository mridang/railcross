name: Run Tests (Jest)

on: push

permissions:
  contents: write

defaults:
  run:
    working-directory: ./

jobs:
  app-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: ./docker_images
          key: ${{ runner.os }}-docker-${{ hashFiles('docker-compose.yml') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Docker pull
        run: |
          mkdir -p ./docker_images
          docker compose -f docker-compose.yml config --images | while IFS= read -r IMAGE; do
          FILENAME=$(echo -n "$IMAGE" | sha256sum | cut -d' ' -f1).tar
          if [ ! -f "./docker_images/$FILENAME" ]; then
           docker pull "$IMAGE"
           docker save "$IMAGE" -o "./docker_images/$FILENAME"
          fi
          docker load -i "./docker_images/$FILENAME"
          done

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Run Jest
        run: npm run test
        env:
          JEST_GITHUB_REPO: ${{ secrets.JEST_GITHUB_REPO }}
          JEST_GITHUB_PAT: ${{ secrets.JEST_GITHUB_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
